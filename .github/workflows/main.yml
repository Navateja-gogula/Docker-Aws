name: Multi-Environment Deployment

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-and-deploy:
    name: Build, Push, and Deploy to AWS ECS
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: package-lock.json

      # Step 3: Install dependencies
      - name: Install dependencies
        run: npm ci

      # Step 4: Run tests
      - name: Run tests
        run: npm test

      # Step 5: Build the app
      - name: Build the app
        run: npm run build --verbose

      # Step 6: List build directory for debugging
      - name: List build directory
        run: ls -alh build || echo "Build directory not found"

      # Step 7: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 8: Build Docker Image
      - name: Build Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/todo-app:latest .

      # Step 9: Push Docker Image to Docker Hub
      - name: Push Docker Image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/todo-app:latest

  deploy:
    name: Deploy to AWS ECS
    runs-on: aws-ec2
    needs: build-and-deploy

    steps:
      # Step 1: Configure AWS Credentials
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1  # Change to your AWS region

      # Step 2: Pull latest Docker image from Docker Hub
      - name: Pull Docker Image from Docker Hub
        run: |
          docker pull ${{ secrets.DOCKER_USERNAME }}/todo-app:latest

      # Step 3: Update ECS Task Definition with new image
      - name: Update ECS Task Definition
        id: update-task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ecs-task-definition.json  # Ensure this file is in your repo
          container-name: todo-app
          image: ${{ secrets.DOCKER_USERNAME }}/todo-app:latest

      # Step 4: Deploy updated Task Definition to ECS
      - name: Deploy to ECS Service
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.update-task-def.outputs.task-definition }}
          service: my-ecs-service
          cluster: my-ecs-cluster
          wait-for-service-stability: true

